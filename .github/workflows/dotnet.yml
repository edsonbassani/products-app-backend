name: .NET

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Find solution file
      id: find_sln
      run: echo "SOLUTION_PATH=$(find $GITHUB_WORKSPACE -name '*.sln' | head -n 1)" >> $GITHUB_ENV

    - name: Display solution path
      run: echo "Solution Path" ${{ env.SOLUTION_PATH }}
  
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: "DeveloperEvaluation"
        path: "src"
        format: "HTML"
        out: "dependency-check-report"

    - name: Run .NET Code Analysis
      run: dotnet build "${{ env.SOLUTION_PATH }}" /p:TreatWarningsAsErrors=true

    - name: Build
      run: dotnet build "${{ env.SOLUTION_PATH }}" --no-restore

    - name: Test
      run: dotnet test "${{ env.SOLUTION_PATH }}" --no-build --verbosity normal

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: "csharp"

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    - name: Publish
      run: dotnet publish "${{ github.workspace }}/src/DeveloperEvaluation.WebApi/DeveloperEvaluation.WebApi.csproj" -c Release -o ./publish

    - name: Create ZIP file
      run: zip -r ./output.zip ./publish

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: ./output.zip
        
